@model Blogger.Web.Models.ViewModel.BlogDetailsViewModel
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> signInManager
@inject UserManager<IdentityUser> userManager
@{
    ViewData["Title"] = Model.Pagetitle;
}

<div class="container my-5">
    <div class="row justify-content-center">
        <div class="col-12 col-lg-6">
            @if (Model!= null)
            {
                <h1 class="mb-3">@Model.Heading</h1>
                <div class="d-flex justify-content-between mb-3">
                    <span class="text-secondary">Author: @Model.Author</span>
                    <span class="text-secondary"> @Model.PublishedDate.ToShortDateString()</span>
                  
                </div>

                <div class="mb-3">
                    @if (signInManager.IsSignedIn(User))
                    {
                        if (Model.Like)
                        {
                            <a style="cursor:pointer;">

                                <i class="bi bi-heart-fill"></i>
                            </a>
                        }
                        else
                        {
                            <a id="btnLike" style="cursor:pointer;">

                                <i class="bi bi-heart"></i>
                            </a>
                        }
                        
                    }
                    <span id="totalLikes">@Model.TotalLikes</span> Likes
                    
                </div>


                <div class="d-flex  mb-3">
                    @foreach (var item in Model.Tags)
                    {
                        <span class=" badge bg-secondary me-1">@item.Name</span>
                    }
                </div>

                <img src="@Model.FeaturedImageUrl" class="d-block img-fluid mb-3 " />

                <div class="mb-3 blog-details-content">
                    @Html.Raw(Model.Content)
                </div>

                <div class="card">
                    <div class="card-header">
                        <h5>Comments</h5>

                        @if (signInManager.IsSignedIn(User))
                        {
                            <form method="post">
                                <div class="mb-3">
                                    <label class="form-label"> Enter Your Comment</label>
                                    <input  type="text" class="form-control" asp-for="CommentDescription"/>
                                </div>
                                <div class="mb-3">
                                    <button type="submit" class="btn btn-dark">
                                        Submit Comment
                                    </button>
                                    <input type="hidden" asp-for="Id"/>
                                    <input type="hidden" asp-for="UrlHandle" />

                            </form>
                        }

                        </div>
                        <div class="card-body">
                            @if (Model.Comments !=null && Model.Comments.Any())
                        {
                            @foreach (var item in Model.Comments)
                            {
                                <div class="card mb-3">
                                     <div class="card-body">
                                         <div>
                                        @item.Description
                                         </div>
                                        
                                         <div class="d-flex justify-content-between mb-2">

                                        <span class="text-secondary">@item.Username</span>
                                        <span class="text-secondary"> @item.DateAdded.ToShortDateString()</span>

                                         </div>
                                    </div>                                    
                                </div>
                            }
                            
                        }
                        </div>
                </div>
                   

               
            }
            else{<p> BlogPost Not Found!</p>}

        </>

    </div>

</div>

    @section Scripts {
        <script>
            const btnLikeElement = document.getElementById('btnLike');
            const totalLikeElement = document.getElementById('totalLikes')

            async function getTotalLikes() {
                fetch('/api/blogpostLike/@Model.Id/totalLikes', {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json',
                        'Accept': '*/*'
                    }
                })
                    .then(data => data.json())
                    .then(result => totalLikeElement.innerHTML = result);
            }

            async function addLikeForBlog() {
                fetch('/api/BlogPostLike/Add', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Accept': '*/*'
                    },
                    body: JSON.stringify({
                        blogPostId: '@Model.Id',
                        userId: '@userManager.GetUserId(User)'
                    })
                }).then(() => {
                    btnLikeElement.innerHTML = '<i class="bi bi-heart-fill"></i>';
                    btnLikeElement.removeEventListener('click', addLikeForBlog);
                    getTotalLikes();
                   
                });
            }

            btnLikeElement.addEventListener('click', addLikeForBlog);
        </script>
    }

